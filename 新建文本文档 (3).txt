1.用户重复操作，需要先获取id，然后请求接口时，再传入id

2.防止用户渲染script脚本语言，使用pre





前端部分使用loading进行对代码的控制，、
问题：当一个请求没有发完后，如果用户关闭后，loading还可以出现吗？
答：经测试得知，当loading状态被置为true时，若请求不结束，则状态不会更改，请求结束后，会返回一个消息。

可以采用两个两种方式解决：socket，


优化：1.上一步是返回（原网站是直接退出登录，希望做成上一步操作）  2.可以打开多个标签。

希望记住用户的操作习惯，需要禁用浏览器的上一步地址。 

或者不需要禁用浏览器，只需要在每次查询时
（在models中接收参数转序列化，也可以不选择那种序列化，可以选择转化未json字符串push到地址栏，实现跳转，），
// console.log(payload)
// if(payload){
//   yield put(routerRedux.push('?'+payload.uid));
// }
将参数传入浏览器地址栏即可，这样浏览器就会记住上一次的操作。
但是数据会不会和原来一样呢？可再次获取地址栏的内容，进行查询操作。
（在页面上需要获取地址栏参数进行查询操作，并将参数回显到input框中）
但是整个过程中会存在严重的安全问题。

只能上传一个图片的实现：
1.限制用户只能上传一个，当有一个时，用户需要删除后才能上传。
2.限制用户只能上传一个，当有一个时，用户再上传会覆盖掉上一个。――logo已经采用这种方式。

文件上传不知道咋了，beforeUpload总是控制不住（并没有上传到服务器只是前端显示了），有可能是没有通后台原因。实在不行通过css控制。

也可以采用其他方法进行控制：只显示最新的那个传输，但是。
